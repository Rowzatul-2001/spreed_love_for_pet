package pawprint.manager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Shammy
 */
public class Connectivity extends javax.swing.JFrame {

    /**
     * Creates new form Connectivity
     */
    
    Connection con;
    private JPanel timelinePanel;

    

    
    
    public Connectivity() {
        try {
            initComponents();
            
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/powPrint?useSSL=false","root","1510791365peru#&#&");
            timelinePanel = new JPanel();
            timelinePanel.setLayout(new BoxLayout(timelinePanel, BoxLayout.Y_AXIS));
            ShowPosts.setViewportView(timelinePanel); // Set the scroll pane's view to the timelinePanel
            loadExistingPosts(); 
            
        } catch (SQLException ex) {
            Logger.getLogger(Connectivity.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        WritePost = new javax.swing.JTextArea();
        ShowPosts = new javax.swing.JScrollPane();
        CreatePost = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WritePost.setColumns(20);
        WritePost.setFont(new java.awt.Font("Annai MN", 1, 24)); // NOI18N
        WritePost.setRows(5);
        jScrollPane1.setViewportView(WritePost);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, 920, 170));

        ShowPosts.setFont(new java.awt.Font("Annai MN", 1, 36)); // NOI18N
        getContentPane().add(ShowPosts, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 1130, 420));

        CreatePost.setBackground(new java.awt.Color(0, 153, 204));
        CreatePost.setFont(new java.awt.Font("Amatic SC", 1, 36)); // NOI18N
        CreatePost.setText("Create");
        CreatePost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatePostActionPerformed(evt);
            }
        });
        getContentPane().add(CreatePost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 530, 160, 60));

        BackButton.setBackground(new java.awt.Color(0, 153, 255));
        BackButton.setFont(new java.awt.Font("Amatic SC", 1, 36)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 610, 160, 60));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        
                Management m=new Management();
                m.setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void CreatePostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatePostActionPerformed
        try {
            // TODO add your handling code here:
            String nilam=WritePost.getText();
            
            String sql = "INSERT INTO POST ( POST) VALUES (?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,nilam);
                   
            ps.executeUpdate();
            
            WritePost.setText("");

        // Add the post content to the timeline (scroll pane)
           JPanel postPanel = new JPanel();
           postPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
           postPanel.setLayout(new BorderLayout());

           JLabel contentLabel = new JLabel(nilam);
           postPanel.add(contentLabel, BorderLayout.CENTER);

           timelinePanel.add(postPanel); // Add the post panel to the timeline panel
           timelinePanel.revalidate();
           timelinePanel.repaint();
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Connectivity.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
    }//GEN-LAST:event_CreatePostActionPerformed

    
    private void loadExistingPosts() {
    try {
        String sql = "SELECT POST FROM POST";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();
        
        while (rs.next()) {
            String postContent = rs.getString("POST");
            addPostToTimeline(postContent);
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(Connectivity.class.getName()).log(Level.SEVERE, null, ex);
    }
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connectivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connectivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connectivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connectivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connectivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CreatePost;
    private javax.swing.JScrollPane ShowPosts;
    private javax.swing.JTextArea WritePost;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void addPostToTimeline(String postContent) {
         JPanel postPanel = new JPanel();
         postPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
         postPanel.setLayout(new BorderLayout());
 
         JLabel contentLabel = new JLabel(postContent); // Use postContent instead of content
         postPanel.add(contentLabel, BorderLayout.CENTER);

         timelinePanel.add(postPanel); // Add the post panel to the timeline panel
         timelinePanel.revalidate();
         timelinePanel.repaint();
}


   
}
